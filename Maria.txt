-- MariaDB Version
개발용 : 10.6.8
서버용 : 10.6.7

-- Amazon RDS
-- 마스터 사용자 이름 : admin
-- 마스터 암호 : fresh-maria

-- cmd에서 로컬 MariaDB 접속
mysql -uroot -p
-- pw 입력
maria

-- cmd에서 RDS MariaDB 접속
mysql -h <endpoint> -P 3306 -u <mymasteruser> -p
mysql -h 10.0.155.2 -u admin -p

-- 인코딩 확인
status

-- 데이터베이스 내 인코딩 설정
alter database intern default character set utf8 collate utf8_general_ci;

-- 서비스 중지
net stop mariadb

-- 서비스 시작
net start mariadb

-- 데이터베이스 확인
show databases;

-- 데이터베이스 내 테이블 조회
show tables;

-- 데이터베이스 접속
use [ 데이터베이스 사용자명 ];
use intern;

-- 경고문 발생시 경고내용 보기
show warnings;

-- 데이터베이스 생성
create database [ 데이터베이스명 ];
create database intern;

-- 데이터베이스 삭제
drop database 이름;

-- 테이블 삭제
drop table [ 테이블명 ];

drop table expirydate;
drop table information;
drop table product;
drop table productSale;

-- information 테이블 생성
-- id를 기본키로 중복 비허용
create table information(
	power varchar(50),
	name varchar(50) not null,
	id varchar(50),
	pw varchar(64) not null,
    salt varchar(10) not null,
	phone varchar(50) not null,
	gender varchar(50) not null,
	age varchar(50) not null,
	primary key (id) );

-- 회원정보 삽입
-- 샘플 회원 정보 id와 pw는 동일
insert into information values ('manager', 'kimsubin', 'kimsubin', 'fd3677f8e4cc79c7ef722975449e2eb858ba75abcf7c3a2a85c98585d5486ed5', '0', '010-7367-6013', 'Female', 'Twenties');

-- 회원정보 조회
select * from information
	where id = 'id'
	and pw = 'pw';

-- product 테이블 생성
-- 시리얼 코드 : primary key
-- 제품 수량, 유통기간 : server 처리 시 Type을 int로 변환해야 함
create table product(
	name varchar(50),
	id varchar(50),
	code varchar(50),
	quantity varchar(50),
	price varchar(50),
	registerdate date,
	period varchar(50),
	primary key (code)
);

-- expirydate 테이블 생성
create table expirydate(
	code varchar(50),
	foreign key (code) references product (code),
	expirydate date
);

제품명
제품 ID
제품 시리얼 코드
수량
가격
등록일자
유통기간

-- 제품 정보 삽입
-- 등록일자 : 현재 오늘 날짜
insert into product values ('sandwich', 'sandwich', 'sandwich220603062001', 30, '2000', now(), 7 );
insert into product values ('sandwich_v1', 'sandwich_v1', 'wich220531052301', 30, '1000', '2022-05-31', 1 );
insert into product values ('sandwich_v2', 'sandwich_v2', 'wich220531052401', 30, '2000', '2022-05-31', 2 );
insert into product values ('sandwich_v3', 'sandwich_v3', 'wich220531052501', 30, '3000', '2022-05-31', 3 );

-- 제품이 하나도 존재하지 않을 시 오류 발생한 적 있음
-- product 테이블 샘플 값 삽입
insert into product values ('code', 'code', 'code', 2, '2022', now(), 365 );

-- 유통기한 구하기
select date_add(

(select registerdate from product
where code = '[ code 값 ]'),

interval

(select period from product
where code = '[ code 값 ]')

day);

-- 유통기한 샘플 데이터
insert into expirydate values ('wich220531052301', '2022-06-01');
insert into expirydate values ('wich220531052401', '2022-06-02');
insert into expirydate values ('wich220531052501', '2022-06-03');

insert into expirydate values (
'[ code 값 ]',
(
select date_add(

(select registerdate from product
where code = '[ code 값 ]'),

interval

(select period from product
where code = '[ code 값 ]')

day)
)
);

insert into expirydate values (
'sandwich220603062001',
(
select date_add(

(select registerdate from product
where code = 'sandwich220603062001'),

interval

(select period from product
where code = 'sandwich220603062001')

day)
)
);

-- 유통기한 지난 제품 코드 조회
select code from expirydate
where expirydate < now();

-- 지난 유통기한 삭제
delete from expirydate
where expirydate < now();

-- 유통기한 지난 제품 삭제
delete from product
where code =
(select code from expirydate
where expirydate < now());

-- 제품이 하나도 존재하지 않을 시 오류 발생한 적 있음
-- expirydate 테이블 샘플 값 삽입
insert into expirydate values (
'code',
(
select date_add(

(select registerdate from product
where code = 'code'),

interval

(select period from product
where code = 'code')

day)
)
);

-- 유통기한 정보 조회
select * from expirydate;

-- 제품 정보 테이블과 유통기한 테이블 조인 조회
select p.name, p.id, p.code, p.quantity, p.price, p.registerdate, p.period, e.expirydate
	from product as p
	inner join expirydate as e
	on p.code = e.code;

-- productSale 테이블 생성
-- 판매 정보
create table productSale(
	type varchar(50),
	date date,
	name varchar(50),
	quantity varchar(50),
	price varchar(50),
	genber varchar(50),
	age varchar(50)
);

-- 직원 판매 정보
select * from productSale where type='staff';

-- 직원 판매 정보 이번달 포함 6개월 이전 내역만 조회
select type, DATE_FORMAT(date, '%Y-%m') as date, name, quantity from productSale where month(date)<=month(now()) and month(date)+6>month(now()) and type='staff';

-- 직원 판매 정보 이번달 포함 6개월 이전 내역 중 같은 개월 수에 판매된 같은 제품 내역 조회
select type, DATE_FORMAT(date, '%Y-%m') as date, name, quantity, cast(sum(quantity) as signed integer) as sum_quantity from productSale
where month(date)<=month(now()) and month(date)+6>month(now()) and type='staff'
group by DATE_FORMAT(date, '%Y-%m'), name;

-- 직원 판매 정보 샘플 데이터
insert into productSale values ('staff', '2022-01-10', 'Sandwich', '5', '10000', 'None', 'None');
insert into productSale values ('staff', '2022-02-10', 'Sandwich', '10', '50000', 'None', 'None');
insert into productSale values ('staff', '2022-03-10', 'Sandwich', '5', '10000', 'None', 'None');
insert into productSale values ('staff', '2022-04-10', 'Sandwich', '10', '50000', 'None', 'None');
insert into productSale values ('staff', '2022-05-10', 'Sandwich', '5', '10000', 'None', 'None');
insert into productSale values ('staff', '2022-06-10', 'Sandwich', '10', '50000', 'None', 'None');

insert into productSale values ('staff', '2022-01-10', 'Milk', '2', '3000', 'None', 'None');
insert into productSale values ('staff', '2022-02-10', 'Milk', '1', '1500', 'None', 'None');
insert into productSale values ('staff', '2022-03-10', 'Milk', '3', '4500', 'None', 'None');
insert into productSale values ('staff', '2022-04-10', 'Milk', '10', '15000', 'None', 'None');
insert into productSale values ('staff', '2022-05-10', 'Milk', '4', '6000', 'None', 'None');
insert into productSale values ('staff', '2022-06-10', 'Milk', '1', '1500', 'None', 'None');

insert into productSale values ('staff', '2022-01-11', 'Milk', '1', '1500', 'None', 'None');
insert into productSale values ('staff', '2022-02-12', 'Milk', '1', '1500', 'None', 'None');
insert into productSale values ('staff', '2022-03-13', 'Milk', '1', '1500', 'None', 'None');
insert into productSale values ('staff', '2022-04-12', 'Milk', '1', '1500', 'None', 'None');
insert into productSale values ('staff', '2022-05-11', 'Milk', '1', '1500', 'None', 'None');
insert into productSale values ('staff', '2022-06-10', 'Milk', '1', '1500', 'None', 'None');

-- 고객 판매 정보 전체 조회
select * from productSale where type='customer';

-- 고객 판매 정보 이번달 포함 6개월 이전 내역만 조회
select * from productSale where month(date)<=month(now()) and month(date)+6>month(now()) and type='customer';

-- 파이썬에서 SQLAlchemy 이용 시 DATE_FORMAT 쿼리 %%로 작성
select type, DATE_FORMAT(date, '%%Y-%%m') as date, name, quantity from productSale where month(date)<=month(now()) and month(date)+6>month(now()) and type='customer';

-- 고객 판매 정보 샘플 데이터
insert into productSale values ('customer', '2022-01-10', 'Sandwich', '5', '10000', 'None', 'None');
insert into productSale values ('customer', '2022-02-10', 'Sandwich', '10', '50000', 'None', 'None');
insert into productSale values ('customer', '2022-03-10', 'Sandwich', '5', '10000', 'None', 'None');
insert into productSale values ('customer', '2022-04-10', 'Sandwich', '10', '50000', 'None', 'None');
insert into productSale values ('customer', '2022-05-10', 'Sandwich', '5', '10000', 'None', 'None');
insert into productSale values ('customer', '2022-06-10', 'Sandwich', '10', '50000', 'None', 'None');

insert into productSale values ('customer', '2022-01-10', 'Hotdog', '10', '5000', 'None', 'None');
insert into productSale values ('customer', '2022-02-10', 'Hotdog', '5', '10000', 'None', 'None');
insert into productSale values ('customer', '2022-03-10', 'Hotdog', '10', '5000', 'None', 'None');
insert into productSale values ('customer', '2022-04-10', 'Hotdog', '5', '10000', 'None', 'None');
insert into productSale values ('customer', '2022-05-10', 'Hotdog', '10', '5000', 'None', 'None');
insert into productSale values ('customer', '2022-06-10', 'Hotdog', '5', '10000', 'None', 'None');

insert into productSale values ('customer', '2022-01-10', 'Apple', '1', '1000', 'None', 'None');
insert into productSale values ('customer', '2022-02-10', 'Apple', '9', '9000', 'None', 'None');
insert into productSale values ('customer', '2022-03-10', 'Apple', '6', '6000', 'None', 'None');
insert into productSale values ('customer', '2022-04-10', 'Apple', '7', '70000', 'None', 'None');
insert into productSale values ('customer', '2022-05-10', 'Apple', '2', '2000', 'None', 'None');
insert into productSale values ('customer', '2022-06-10', 'Apple', '1', '1000', 'None', 'None');

판매 타입
판매 날짜
제품명
수량
가격
성별
나이대

-- 판매 제품 수량 업데이트
update product
set quantity = '[ 바꿀 수량 ]'
where code = '[ code 값 ]';

-- 권한 업데이트
update information
set power = '[ 바꿀 권한 ]'
where id = '[ 회원 ID ]';
